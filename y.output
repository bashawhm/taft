Terminals which are not used

   IDENT
   EQ
   NE
   LT
   LE
   GT
   GE
   PLUS
   MINUS
   OR
   STAR
   SLASH
   AND
   ARRAY_ACCESS
   FUNCTION_CALL
   PROCEDURE_CALL
   COMMA
   SEMICOLON


State 90 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 @1: /* empty */

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    3 identifier_list: ID
    4                | identifier_list ',' ID

    5 declarations: declarations VAR identifier_list ':' type ';'
    6             | /* empty */

    7 type: standard_type
    8     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

    9 standard_type: INTEGER
   10              | REAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | /* empty */

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   14 @2: /* empty */

   15 subprogram_head: FUNCTION ID @2 arguments ':' standard_type ';'

   16 @3: /* empty */

   17 subprogram_head: PROCEDURE ID @3 arguments ';'

   18 arguments: '(' parameter_list ')'
   19          | /* empty */

   20 parameter_list: identifier_list ':' type
   21               | parameter_list ';' identifier_list ':' type

   22 compound_statement: BBEGIN optional_statements END

   23 optional_statements: statement_list
   24                    | /* empty */

   25 statement_list: statement
   26               | statement_list ';' statement

   27 statement: variable ASSIGNOP expression
   28          | procedure_statement
   29          | compound_statement
   30          | IF expression THEN statement
   31          | IF expression THEN statement ELSE statement
   32          | WHILE expression DO statement

   33 variable: ID
   34         | ID '[' expression ']'

   35 procedure_statement: ID
   36                    | ID '(' expression_list ')'

   37 expression_list: expression
   38                | expression_list ',' expression

   39 expression: simple_expression
   40           | simple_expression RELOP simple_expression

   41 simple_expression: term
   42                  | ADDOP term
   43                  | simple_expression ADDOP term

   44 term: factor
   45     | term MULOP factor

   46 factor: ID
   47       | ID '(' expression_list ')'
   48       | ID '[' expression ']'
   49       | INUM
   50       | RNUM
   51       | '(' expression_list ')'
   52       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 18 36 47 51
')' (41) 2 18 36 47 51
',' (44) 4 38
'.' (46) 2
':' (58) 5 15 20 21
';' (59) 2 5 11 15 17 21 26
'[' (91) 8 34 48
']' (93) 8 34 48
error (256)
PROGRAM (258) 2
BBEGIN (259) 22
END (260) 22
PROCEDURE (261) 17
FUNCTION (262) 15
IDENT (263)
INTEGER (264) 9
REAL (265) 10
ARRAY (266) 8
OF (267) 8
ASSIGNOP (268) 27
RELOP (269) 40
EQ (270)
NE (271)
LT (272)
LE (273)
GT (274)
GE (275)
ADDOP (276) 42 43
PLUS (277)
MINUS (278)
OR (279)
MULOP (280) 45
STAR (281)
SLASH (282)
AND (283)
NOT (284) 52
DOTDOT (285) 8
ID (286) 2 3 4 15 17 33 34 35 36 46 47 48
INUM (287) 8 49
RNUM (288) 50
VAR (289) 5
IF (290) 30 31
THEN (291) 30 31
ELSE (292) 31
WHILE (293) 32
DO (294) 32
ARRAY_ACCESS (295)
FUNCTION_CALL (296)
PROCEDURE_CALL (297)
COMMA (298)
SEMICOLON (299)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 2, on right: 0
@1 (55)
    on left: 1, on right: 2
identifier_list (56)
    on left: 3 4, on right: 2 4 5 20 21
declarations (57)
    on left: 5 6, on right: 2 5 13
type (58)
    on left: 7 8, on right: 5 20 21
standard_type (59)
    on left: 9 10, on right: 7 8 15
subprogram_declarations (60)
    on left: 11 12, on right: 2 11 13
subprogram_declaration (61)
    on left: 13, on right: 11
subprogram_head (62)
    on left: 15 17, on right: 13
@2 (63)
    on left: 14, on right: 15
@3 (64)
    on left: 16, on right: 17
arguments (65)
    on left: 18 19, on right: 15 17
parameter_list (66)
    on left: 20 21, on right: 18 21
compound_statement (67)
    on left: 22, on right: 2 13 29
optional_statements (68)
    on left: 23 24, on right: 22
statement_list (69)
    on left: 25 26, on right: 23 26
statement (70)
    on left: 27 28 29 30 31 32, on right: 25 26 30 31 32
variable (71)
    on left: 33 34, on right: 27
procedure_statement (72)
    on left: 35 36, on right: 28
expression_list (73)
    on left: 37 38, on right: 36 38 47 51
expression (74)
    on left: 39 40, on right: 27 30 31 32 34 37 38 48
simple_expression (75)
    on left: 41 42 43, on right: 39 40 43
term (76)
    on left: 44 45, on right: 41 42 43 45
factor (77)
    on left: 46 47 48 49 50 51 52, on right: 44 45 52


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    2 program: PROGRAM . ID @1 '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    2 program: PROGRAM ID . @1 '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 program: PROGRAM ID @1 . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 6


state 6

    2 program: PROGRAM ID @1 '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


state 7

    3 identifier_list: ID .

    $default  reduce using rule 3 (identifier_list)


state 8

    2 program: PROGRAM ID @1 '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    4 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


state 9

    2 program: PROGRAM ID @1 '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 11


state 10

    4 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


state 11

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 13


state 12

    4 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 4 (identifier_list)


state 13

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    5 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 15


state 14

    5 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


state 15

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 22


state 16

    4 identifier_list: identifier_list . ',' ID
    5 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 23


state 17

   22 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 17
    ID      shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26

    $default  reduce using rule 24 (optional_statements)

    compound_statement   go to state 27
    optional_statements  go to state 28
    statement_list       go to state 29
    statement            go to state 30
    variable             go to state 31
    procedure_statement  go to state 32


state 18

   17 subprogram_head: PROCEDURE . ID @3 arguments ';'

    ID  shift, and go to state 33


state 19

   15 subprogram_head: FUNCTION . ID @2 arguments ':' standard_type ';'

    ID  shift, and go to state 34


state 20

   11 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 35


state 21

   13 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 6 (declarations)

    declarations  go to state 36


state 22

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 37


state 23

    5 declarations: declarations VAR identifier_list ':' . type ';'

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    ARRAY    shift, and go to state 40

    type           go to state 41
    standard_type  go to state 42


state 24

   33 variable: ID .
   34         | ID . '[' expression ']'
   35 procedure_statement: ID .
   36                    | ID . '(' expression_list ')'

    '('  shift, and go to state 43
    '['  shift, and go to state 44

    ASSIGNOP  reduce using rule 33 (variable)
    $default  reduce using rule 35 (procedure_statement)


state 25

   30 statement: IF . expression THEN statement
   31          | IF . expression THEN statement ELSE statement

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 51
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 26

   32 statement: WHILE . expression DO statement

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 55
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 27

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


state 28

   22 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 56


state 29

   23 optional_statements: statement_list .
   26 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 57

    $default  reduce using rule 23 (optional_statements)


state 30

   25 statement_list: statement .

    $default  reduce using rule 25 (statement_list)


state 31

   27 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 58


state 32

   28 statement: procedure_statement .

    $default  reduce using rule 28 (statement)


state 33

   17 subprogram_head: PROCEDURE ID . @3 arguments ';'

    $default  reduce using rule 16 (@3)

    @3  go to state 59


state 34

   15 subprogram_head: FUNCTION ID . @2 arguments ':' standard_type ';'

    $default  reduce using rule 14 (@2)

    @2  go to state 60


state 35

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 11 (subprogram_declarations)


state 36

    5 declarations: declarations . VAR identifier_list ':' type ';'
   13 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 61


state 37

    2 program: PROGRAM ID @1 '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 2 (program)


state 38

    9 standard_type: INTEGER .

    $default  reduce using rule 9 (standard_type)


state 39

   10 standard_type: REAL .

    $default  reduce using rule 10 (standard_type)


state 40

    8 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 62


state 41

    5 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 63


state 42

    7 type: standard_type .

    $default  reduce using rule 7 (type)


state 43

   36 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 64
    expression         go to state 65
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 44

   34 variable: ID '[' . expression ']'

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 66
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 45

   42 simple_expression: ADDOP . term

    NOT   shift, and go to state 46
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    term    go to state 67
    factor  go to state 54


state 46

   52 factor: NOT . factor

    NOT   shift, and go to state 46
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    factor  go to state 68


state 47

   46 factor: ID .
   47       | ID . '(' expression_list ')'
   48       | ID . '[' expression ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 46 (factor)


state 48

   49 factor: INUM .

    $default  reduce using rule 49 (factor)


state 49

   50 factor: RNUM .

    $default  reduce using rule 50 (factor)


state 50

   51 factor: '(' . expression_list ')'

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 71
    expression         go to state 65
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 51

   30 statement: IF expression . THEN statement
   31          | IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 72


state 52

   39 expression: simple_expression .
   40           | simple_expression . RELOP simple_expression
   43 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 73
    ADDOP  shift, and go to state 74

    $default  reduce using rule 39 (expression)


state 53

   41 simple_expression: term .
   45 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 41 (simple_expression)


state 54

   44 term: factor .

    $default  reduce using rule 44 (term)


state 55

   32 statement: WHILE expression . DO statement

    DO  shift, and go to state 76


state 56

   22 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 22 (compound_statement)


state 57

   26 statement_list: statement_list ';' . statement

    BBEGIN  shift, and go to state 17
    ID      shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 77
    variable             go to state 31
    procedure_statement  go to state 32


state 58

   27 statement: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 78
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 59

   17 subprogram_head: PROCEDURE ID @3 . arguments ';'

    '('  shift, and go to state 79

    $default  reduce using rule 19 (arguments)

    arguments  go to state 80


state 60

   15 subprogram_head: FUNCTION ID @2 . arguments ':' standard_type ';'

    '('  shift, and go to state 79

    $default  reduce using rule 19 (arguments)

    arguments  go to state 81


state 61

   11 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   13 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 82


state 62

    8 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 83


state 63

    5 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 5 (declarations)


state 64

   36 procedure_statement: ID '(' expression_list . ')'
   38 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 84
    ','  shift, and go to state 85


state 65

   37 expression_list: expression .

    $default  reduce using rule 37 (expression_list)


state 66

   34 variable: ID '[' expression . ']'

    ']'  shift, and go to state 86


state 67

   42 simple_expression: ADDOP term .
   45 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 42 (simple_expression)


state 68

   52 factor: NOT factor .

    $default  reduce using rule 52 (factor)


state 69

   47 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 87
    expression         go to state 65
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 70

   48 factor: ID '[' . expression ']'

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 88
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 71

   38 expression_list: expression_list . ',' expression
   51 factor: '(' expression_list . ')'

    ')'  shift, and go to state 89
    ','  shift, and go to state 85


state 72

   30 statement: IF expression THEN . statement
   31          | IF expression THEN . statement ELSE statement

    BBEGIN  shift, and go to state 17
    ID      shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 90
    variable             go to state 31
    procedure_statement  go to state 32


state 73

   40 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    simple_expression  go to state 91
    term               go to state 53
    factor             go to state 54


state 74

   43 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 46
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    term    go to state 92
    factor  go to state 54


state 75

   45 term: term MULOP . factor

    NOT   shift, and go to state 46
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    factor  go to state 93


state 76

   32 statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 17
    ID      shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 94
    variable             go to state 31
    procedure_statement  go to state 32


state 77

   26 statement_list: statement_list ';' statement .

    $default  reduce using rule 26 (statement_list)


state 78

   27 statement: variable ASSIGNOP expression .

    $default  reduce using rule 27 (statement)


state 79

   18 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 7

    identifier_list  go to state 95
    parameter_list   go to state 96


state 80

   17 subprogram_head: PROCEDURE ID @3 arguments . ';'

    ';'  shift, and go to state 97


state 81

   15 subprogram_head: FUNCTION ID @2 arguments . ':' standard_type ';'

    ':'  shift, and go to state 98


state 82

   13 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 13 (subprogram_declaration)


state 83

    8 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 99


state 84

   36 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 36 (procedure_statement)


state 85

   38 expression_list: expression_list ',' . expression

    ADDOP  shift, and go to state 45
    NOT    shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 100
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


state 86

   34 variable: ID '[' expression ']' .

    $default  reduce using rule 34 (variable)


state 87

   38 expression_list: expression_list . ',' expression
   47 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 101
    ','  shift, and go to state 85


state 88

   48 factor: ID '[' expression . ']'

    ']'  shift, and go to state 102


state 89

   51 factor: '(' expression_list ')' .

    $default  reduce using rule 51 (factor)


state 90

   30 statement: IF expression THEN statement .
   31          | IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 30 (statement)]
    $default  reduce using rule 30 (statement)


state 91

   40 expression: simple_expression RELOP simple_expression .
   43 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 74

    $default  reduce using rule 40 (expression)


state 92

   43 simple_expression: simple_expression ADDOP term .
   45 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 43 (simple_expression)


state 93

   45 term: term MULOP factor .

    $default  reduce using rule 45 (term)


state 94

   32 statement: WHILE expression DO statement .

    $default  reduce using rule 32 (statement)


state 95

    4 identifier_list: identifier_list . ',' ID
   20 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 104


state 96

   18 arguments: '(' parameter_list . ')'
   21 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 105
    ';'  shift, and go to state 106


state 97

   17 subprogram_head: PROCEDURE ID @3 arguments ';' .

    $default  reduce using rule 17 (subprogram_head)


state 98

   15 subprogram_head: FUNCTION ID @2 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    standard_type  go to state 107


state 99

    8 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 108


state 100

   38 expression_list: expression_list ',' expression .

    $default  reduce using rule 38 (expression_list)


state 101

   47 factor: ID '(' expression_list ')' .

    $default  reduce using rule 47 (factor)


state 102

   48 factor: ID '[' expression ']' .

    $default  reduce using rule 48 (factor)


state 103

   31 statement: IF expression THEN statement ELSE . statement

    BBEGIN  shift, and go to state 17
    ID      shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26

    compound_statement   go to state 27
    statement            go to state 109
    variable             go to state 31
    procedure_statement  go to state 32


state 104

   20 parameter_list: identifier_list ':' . type

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    ARRAY    shift, and go to state 40

    type           go to state 110
    standard_type  go to state 42


state 105

   18 arguments: '(' parameter_list ')' .

    $default  reduce using rule 18 (arguments)


state 106

   21 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 111


state 107

   15 subprogram_head: FUNCTION ID @2 arguments ':' standard_type . ';'

    ';'  shift, and go to state 112


state 108

    8 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 113


state 109

   31 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 31 (statement)


state 110

   20 parameter_list: identifier_list ':' type .

    $default  reduce using rule 20 (parameter_list)


state 111

    4 identifier_list: identifier_list . ',' ID
   21 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 114


state 112

   15 subprogram_head: FUNCTION ID @2 arguments ':' standard_type ';' .

    $default  reduce using rule 15 (subprogram_head)


state 113

    8 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 115


state 114

   21 parameter_list: parameter_list ';' identifier_list ':' . type

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    ARRAY    shift, and go to state 40

    type           go to state 116
    standard_type  go to state 42


state 115

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    standard_type  go to state 117


state 116

   21 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


state 117

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 8 (type)
